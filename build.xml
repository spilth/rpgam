<project name="rpgam" default="run-tests">

	<!-- Main Properties -->
	<property name="sourceDirectory"         location="src" />
    <property name="libraryDirectory"        location="lib/shared" />
	<property name="buildDirectory"          location="build" />
	<property name="classesDirectory"        location="${buildDirectory}/classes" />

	<!-- Test Properties -->
	<property name="testSourceDirectory"     location="test" />
    <property name="testLibraryDirectory"    location="testlib" />
	<property name="testDirectory"           location="${buildDirectory}/test" />
	<property name="testClassesDirectory"    location="${testDirectory}/classes" />
	<property name="testReportDirectory"     location="${testDirectory}/reports" />

	<!-- Distribution Properties -->
	<property name="distDirectory"           location="dist" />
	<property name="iconsDirectory"          location="icons" />

	<!-- Jar Properties -->
	<property name="jarDirectory"            location="${distDirectory}/jar" />
	<property name="unjarDirectory"          location="${distDirectory}/unjar" />
	<property name="jarFile"                 location="${jarDirectory}/rpgam.jar" />
	<property name="mainClass"               value="com.rpgaudiomixer.RPGAudioMixer"/>

	<!-- Native Library Properties -->
	<property name="macLibraryDirectory"     location="lib/native/mac" />
	<property name="windowsLibraryDirectory" location="lib/native/windows" />
	<property name="linuxLibraryDirectory"   location="lib/native/linux" />

	<!-- Zip Properties -->
	<property name="zipDirectory"            location="${distDirectory}/zip" />
	<property name="unzipDirectory"          location="${distDirectory}/unzip" />
	<property name="macZipFile"              location="${zipDirectory}/rpgam-mac.zip" />
	<property name="windowsZipFile"          location="${zipDirectory}/rpgam-windows.zip" />
	<property name="linuxZipFile"            location="${zipDirectory}/rpgam-linux.zip" />
	
	<!-- Upload Properties -->
	<property name="uploadServer" value="rocket.alienwebshop.com" />
	<property name="uploadDirectory" value="/home/www/brian/rpgaudiomixer/dist/development" />
	
    <path id="classpath">
        <fileset dir="${libraryDirectory}" includes="**/*.jar"/>
        <fileset dir="${macLibraryDirectory}" includes="**/*.jar"/>
    </path>

    <path id="testClasspath">
        <fileset dir="${libraryDirectory}"     includes="**/*.jar"/>
        <fileset dir="${jarDirectory}"         includes="**/*.jar"/>
        <fileset dir="${testLibraryDirectory}" includes="**/*.jar"/>
    </path>
	
	<target name="init">
		<mkdir dir="${buildDirectory}" />
		<mkdir dir="${classesDirectory}" />
		<mkdir dir="${testClassesDirectory}" />
		<mkdir dir="${testReportDirectory}" />
		<mkdir dir="${distDirectory}" />
		<mkdir dir="${jarDirectory}"/>
		<mkdir dir="${unjarDirectory}" />
		<mkdir dir="${zipDirectory}" />
		<mkdir dir="${unzipDirectory}" />
	</target>

	<target name="compile" depends="init">
		<javac srcdir="${sourceDirectory}" destdir="${classesDirectory}" classpathref="classpath" />
	</target>

	<target name="javadoc" depends="compile">
		<javadoc
		           destdir="dist/docs/api"
		           author="true"
		           version="true"
		           use="true"
		           windowtitle="RPG Audio Mixer API">

		    <packageset dir="src" defaultexcludes="yes">
		      <include name="com/rpgaudiomixer/**"/>
		    </packageset>

		    <doctitle><![CDATA[<h1>RPG Audio Mixer</h1>]]></doctitle>
		    <bottom><![CDATA[<i>Copyright &#169; 2000 Dummy Corp. All Rights Reserved.</i>]]></bottom>
		    <tag name="todo" scope="all" description="To do:"/>
		    <link offline="true" href="http://java.sun.com/j2se/1.5.0/docs/api/" packagelistLoc="C:\tmp"/>
		    <link href="http://developer.java.sun.com/developer/products/xml/docs/api/"/>
		  </javadoc>		
	</target>
	
	<target name="compile-tests" depends="jar">
		<javac srcdir="${testSourceDirectory}" destdir="${testClassesDirectory}" classpathref="testClasspath" />
	</target>
		
	<target name="jar" depends="compile">
		<jar destfile="${jarFile}" basedir="${classesDirectory}" manifest="manifest.txt" />
    </target>

	<target name="unjar" depends="jar">
		<unjar src="${jarFile}" dest="${unjarDirectory}" />		
	</target>

	<target name="zip" depends="jar">
		<zip destFile="${macZipFile}">
			<zipfileset file="scripts/rpgam.sh"          prefix="RPG Audio Mixer/" />
			<zipfileset file="${jarFile}"                prefix="RPG Audio Mixer/" />
			<zipfileset dir="${iconsDirectory}"          prefix="RPG Audio Mixer/icons" />
			<zipfileset dir="${libraryDirectory}"        prefix="RPG Audio Mixer/lib" />
			<zipfileset dir="${macLibraryDirectory}"     prefix="RPG Audio Mixer/lib" />
		</zip>

		<zip destFile="${windowsZipFile}">
			<zipfileset file="scripts/rpgam.bat"         prefix="RPG Audio Mixer/" />
			<zipfileset file="${jarFile}"                prefix="RPG Audio Mixer/"  />
			<zipfileset dir="${iconsDirectory}"          prefix="RPG Audio Mixer/icons" />
			<zipfileset dir="${libraryDirectory}"        prefix="RPG Audio Mixer/lib" />
			<zipfileset dir="${windowsLibraryDirectory}" prefix="RPG Audio Mixer/lib" />
		</zip>

		<zip destFile="${linuxZipFile}">
			<zipfileset file="${jarFile}"                prefix="RPG Audio Mixer/" />
			<zipfileset dir="${iconsDirectory}"          prefix="RPG Audio Mixer/icons" />
			<zipfileset dir="${libraryDirectory}"        prefix="RPG Audio Mixer/lib" />
			<zipfileset dir="${linuxLibraryDirectory}"   prefix="RPG Audio Mixer/lib" />
		</zip>
	</target>

	<target name="unzip" depends="zip">
		<unzip src="${macZipFile}"     dest="${unzipDirectory}/mac" />
		<unzip src="${windowsZipFile}" dest="${unzipDirectory}/windows" />
		<unzip src="${linuxZipFile}"   dest="${unzipDirectory}/linux" />
	</target>

	<!-- TODO: Add Windows and Linux versions of "run" task -->
	<target name="run" depends="unzip">
		<java fork="true" classname="${mainClass}" dir="${unzipDirectory}/mac/RPG Audio Mixer" >
			<arg value="-XstartOnFirstThread" />
            <classpath>
    	        <fileset dir="${unzipDirectory}/mac/RPG Audio Mixer" includes="**/*.jar"/>
            </classpath>
        </java>
    </target>

	<target name="run-tests" depends="compile-tests">
		<junit printsummary="yes">
			<classpath>
		        <fileset dir="${libraryDirectory}"     includes="**/*.jar" />
		        <fileset dir="${testLibraryDirectory}" includes="**/*.jar" />
		        <path location="${classesDirectory}" />
		        <path location="${testClassesDirectory}" />
			</classpath>

			<formatter type="plain" />

			<batchtest fork="yes" todir="${testReportDirectory}">
				<fileset dir="${testClassesDirectory}" />
			</batchtest>
		</junit>
	</target>
	
	<target name="upload" depends="zip">
		<input addproperty="username" message="Username:" />
		<input addproperty="password" message="Password:" />
		<scp todir="${username}:${password}@${uploadServer}:${uploadDirectory}" verbose="yes" trust="true">
			<fileset dir="${zipDirectory}" />
		</scp>
	</target>
	
	<target name="clean">
		<delete dir="${buildDirectory}" />
		<delete dir="${distDirectory}" />
	</target>

	<target name="full" depends="clean, unzip, run-tests" />

</project>
